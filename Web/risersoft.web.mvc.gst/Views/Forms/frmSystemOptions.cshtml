@using AuthorizationFramework.Proxies
@using risersoft.shared.portable
@using risersoft.app.mxform
@using risersoft.app.mxform.gst
@using risersoft.shared.portable.Proxies
@using risersoft.shared.web.Extensions
@using Newtonsoft.Json
@model frmSystemOptionsModel

@{
    ViewData["Title"] = "System Options";
    Layout = "~/Views/Shared/_FrameworkLayout.vbhtml";
    var modelJson = JsonConvert.SerializeObject(Model, Formatting.Indented,
                           new JsonSerializerSettings { StringEscapeHandling = StringEscapeHandling.EscapeHtml });
}

<link href="~/Scripts/jquery-ui/jquery-ui.css" rel="stylesheet" />
<link href="~/Content/bootstrap-datepicker.min.css" rel="stylesheet" />
<link href="~/Content/font-awesome.css" rel="stylesheet" />
<script src="~/Scripts/bootstrap-datepicker.min.js"></script>
<script src="~/Scripts/bootree.js" type="text/javascript"></script>

<style type="text/css">
    .tree-view-wrapper, .tree-view-wrapper ul {
        list-style: none;
    }

    .show-hide, .edit {
        cursor: pointer;
    }

    .tree-checkbox {
        margin: 6px !important;
    }

    .edit {
        margin-right: 6px !important;
    }

        .edit i {
            color: #D77105;
        }

    .hide {
        display: none;
    }

    .show {
        display: block;
    }

    .comboTreeWrapper {
        position: relative;
        text-align: left;
        /*width: 37%*/
    }

    .comboTreeInputWrapper {
        position: relative;
    }

    .comboTreeArrowBtn {
        position: absolute;
        right: 0px;
        bottom: 0px;
        top: 0px;
        box-sizing: border-box;
        border: 1px solid #e1e1e1;
        border-radius: 0 6px 6px 0;
        /*background: #808080;*/
        cursor: pointer;
    }

        .comboTreeArrowBtn:hover {
            background: #e8e8e8;
        }

        .comboTreeArrowBtn:active {
            background: #ddd;
        }

    .comboTreeInputBox:focus + .comboTreeArrowBtn {
        color: #555;
        border-top: 1px solid #418EFF;
        border-right: 1px solid #418EFF;
        border-bottom: 1px solid #418EFF;
    }

    .comboTreeArrowBtnImg {
        font-size: 10px;
        padding: 0 12px;
        line-height: calc((12px * 2) + 20px );
    }

    .comboTreeDropDownContainer {
        display: none;
        background: #fff;
        border: 1px solid #b5b5b5;
        position: absolute;
        width: 100%;
        box-sizing: border-box;
        z-index: 999;
    }

        .comboTreeDropDownContainer ul {
            padding: 0px;
            margin: 0;
            max-height: 250px;
            overflow-y: auto;
        }

        .comboTreeDropDownContainer li {
            list-style-type: none;
            padding-left: 15px;
            cursor: pointer;
        }

            .comboTreeDropDownContainer li:hover {
                background-color: #efefef;
            }

                .comboTreeDropDownContainer li:hover ul {
                    background-color: #fff;
                }

            .comboTreeDropDownContainer li span.comboTreeItemTitle.comboTreeItemHover {
                background-color: #418EFF;
                color: #fff;
                border-radius: 2px;
            }

    span.comboTreeItemTitle {
        display: block;
        padding: 3px 8px;
    }

    .comboTreeDropDownContainer label {
        cursor: pointer;
        width: 100%;
        display: block;
    }

    .comboTreeDropDownContainer .comboTreeItemTitle input {
        position: relative;
        top: 2px;
        margin: 0px 4px 0px 0px;
    }

    .comboTreeParentPlus {
        position: relative;
        left: -12px;
        top: 4px;
        width: 4px;
        float: left;
    }

    .comboTreeInputBox {
        padding: 8px;
        border-radius: 5px;
        border: 1px solid #e1e1e1;
        width: 100%;
        box-sizing: border-box;
        padding-right: 24px;
    }

        .comboTreeInputBox:focus {
            border: 1px solid #418EFF;
            outline-width: 0;
        }

    .multiplesFilter {
        width: 100%;
        padding: 5px;
        box-sizing: border-box;
        /*border-top: none !important;
        border-left: none !important;
        border-right: none !important;*/
        border-bottom: 1px solid #e1e1e1;
    }
</style>

<div class="container cbackground">
    <form action="" method="post" name="userform" ng-controller="FormController">
        @Html.AntiForgeryToken()

        <input type="hidden" id="model_json" value='@Html.Raw(modelJson)' />
        <div Class="form-horizontal">
            <div class="row"></div>
            <div class="row cbackgroun">
                <div class="col-md-1"></div>
                <div class="col-md-8"><label class="control-label">Company Group</label></div>
            </div>
            <div Class="row">
                <div Class="col-md-1"></div>
                <div Class="col-md-6">
                    <Label Class="control-label labeltext">Name</Label>
                    <input name="disname" type="text" ng-model="OptionsModel.CompGroupName" style="max-width: 540px;" class="form-control" />
                </div>
                <div Class="col-md-4">

                </div>
            </div>
            <div class="row">
                <div class="col-md-1"></div>
                <div class="col-md-6">
                    <Label Class="control-label labeltext">Address</Label>
                    <input type="text" ng-model="OptionsModel.CompGroupAddress" style="max-width: 540px;" class="form-control" />
                </div>
            </div>
            <div Class="row">
                <div Class="col-md-1"></div>
                <div Class="col-md-6">
                    <Label Class="control-label labeltext">ITC Remark Keyword</Label>
                    <input name="disname" type="text" ng-model="OptionsModel.ITCRemarkKeyword" style="max-width: 540px;" class="form-control" />
                </div>
                <div Class="col-md-4">

                </div>
            </div>
            <div class="row cbackgroun">
                <div class="col-md-1"></div>
                <div class="col-md-8"><label class="control-label">Import</label></div>
            </div>
            <div Class="row">
                <div Class="col-md-1"></div>
                <div Class="col-md-10">
                    <Label Class="control-label labeltext">Disable Auto Calculate Invoice Value</Label>
                    <input name="disable" type="checkbox" ng-model="OptionsModel.DisableAutoCalcVal" />
                </div>
            </div>
            <div Class="row">
                <div Class="col-md-1"></div>
                <div Class="col-md-10">
                    <Label Class="control-label labeltext" style="margin-right: 23px;">Disable Auto Calculate Tax Value</Label>
                    <input type="checkbox" ng-model="OptionsModel.DisableAutoCalcTaxVal" />
                </div>
            </div>
            <div Class="row">
                <div Class="col-md-1"></div>
                <div Class="col-md-10">
                    <Label Class="control-label labeltext" style="margin-right: 8px;">Disable Auto Calculate Tax Amount</Label>
                    <input type="checkbox" ng-model="OptionsModel.DisableAutoCalcTaxAmt" />
                </div>
            </div>
            <div Class="row">
                <div Class="col-md-1"></div>
                <div Class="col-md-3">
                    <Label Class="control-label labeltext">Map Name</Label>
                    <input type="text" ng-model="OptionsModel.MapName" class="form-control" />
                </div>
            </div>
            <div class="row cbackgroun">
                <div class="col-md-1"></div>
                <div class="col-md-8"><label class="control-label">Reconcilation</label></div>
            </div>
            <div Class="row">
                <div Class="col-md-1"></div>
                <div Class="col-md-3">
                    <Label Class="control-label labeltext">Tolerance Amount</Label>
                </div>
            </div>
            <div Class="row">
                <div Class="col-md-1"></div>
                <div Class="col-md-3">
                    <Label Class="control-label labeltext">Taxable Value</Label>
                    <input type="text" ng-model="OptionsModel.ReconTolTxVal" class="form-control" />
                </div>
                <div Class="col-md-3">
                    <Label Class="control-label labeltext">Tax Amount</Label>
                    <input type="text" ng-model="OptionsModel.ReconTolTxAmt" class="form-control" />
                </div>
            </div>
            <div Class="row">
                <div Class="col-md-1"></div>
                <div Class="col-md-10">
                    <Label Class="control-label labeltext">Vendor Mail HTML</Label>
                    <textarea rows="8" cols="10" ng-model="OptionsModel.VendorMailHTML" style="max-width: 508px;" class="form-control"></textarea>
                </div>
            </div>
            <div Class="row">
                <div Class="col-md-1"></div>
                <div Class="col-md-3">
                    <Label Class="control-label labeltext">Vendor Mail MatchCode</Label>
                    <input type="text" ng-model="OptionsModel.VendorMailMatchCode" class="form-control" />
                </div>
            </div>
            <div Class="row">
                <div Class="col-md-1"></div>
                <div Class="col-md-10">
                    <Label Class="control-label labeltext" style="margin-right: 53px;">Adjust Amendments and Debit/Credit Notes</Label>
                    <input type="checkbox" ng-model="OptionsModel.ReconAdjustIV" />
                </div>
            </div>
            <div Class="row">
                <div Class="col-md-1"></div>
                <div Class="col-md-10">
                    <Label Class="control-label labeltext" style="margin-right: 146px;">Enable Auto Reconcile POS</Label>
                    <input type="checkbox" ng-model="OptionsModel.ReconcilePOS" />
                </div>
            </div>
            <div class="row cbackgroun">
                <div class="col-md-1"></div>
                <div class="col-md-8"><label class="control-label">GSTN</label></div>
            </div>
            <div Class="row">
                <div Class="col-md-1"></div>
                <div Class="col-md-3">
                    <Label Class="control-label labeltext">GSP</Label>
                    <input type="text" ng-model="OptionsModel.GSP" class="form-control" />
                </div>
                <div Class="col-md-3">
                    <Label Class="control-label labeltext">Environment</Label>
                    <select ng-model="OptionsModel.GSTNProductionSelected" ng-options="itemty.DisplayText for itemty in ValueLists.Envc.ValueListItems track by itemty.DataValue" Class="form-control" style="padding:5px"></select>
                </div>
            </div>

            <div class="row cbackgroun">
                <div class="col-md-1"></div>
                <div class="col-md-8"><label class="control-label">Permission List</label></div>
            </div>
            <div class="row">
                <div Class="col-md-1"></div>
                <div class="col-md-11">
                    <table style="width:100%;">
                        <thead>
                            <tr>
                                <th style="width:130px;">AppCode</th>
                                <th>Permission</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr ng-repeat="x in optionKey">
                                <td>{{x.SettingKey}}</td>
                                <td>
                                    <input type="text" id="justAnInputBox{{$index}}" placeholder="Select" style="max-width: 825px;" />
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
            <div style="clear:both; margin-bottom:10px;"></div>
            @Html.Partial("_SavePanel")
        </div>
    </form>
</div>

@section botscripts{
    <script src="~/Scripts/comboTreePlugin.js"></script>
    <script type="text/javascript">
        rsApp.controller('FormController', function ($scope, $http) {
            $scope.model = JSON.parse($("#model_json").val());
            $scope.status = 'loaded';
            var chkTree;
            var kspMobilechkTree;
            var result;

            var loadmodel = function (result) {
                //debugger
                $scope.model = result;
                $scope.OptionsModel = $scope.model.dsForm.DT[0];
                $scope.ValueLists = $scope.model.ValueLists;
                $scope.dsCombo = $scope.model.dsCombo;
                $scope.optionKey = $scope.model.DatasetCollection.setting.permission;

                setTimeout(function () {
                    for (var i = 0; i < $scope.optionKey.length; i++) {
                        //debugger;
                        if ($scope.optionKey[i].SettingKey.toLowerCase() == "kasp.menu") {
                            if ($scope.model.frmMode == 1) {
                                $scope.model.DatasetCollection.setting.permission[i].CreatedOnUTC = new Date().toUTCString();
                                $scope.model.DatasetCollection.setting.permission[i].Settingtype = "permission";
                            }

                            if ($scope.model.DatasetCollection.setting.permission[i].SettingOptions != null) {
                                chkTree = JSON.parse($scope.model.DatasetCollection.setting.permission[i].SettingOptions.replace(/Key/g, 'id').replace(/Caption/g, 'title').replace(/Items/g, 'subs'));

                                if ($scope.model.DatasetCollection.setting.permission[i].SettingValue != undefined && $scope.model.DatasetCollection.setting.permission[i].SettingValue != "") {
                                    var selectedValue = $scope.model.DatasetCollection.setting.permission[i].SettingValue;
                                    //"ID_ConfigList,ID_MnuSFTP,ID_NewDBSchedTask,ID_DBSchedTask,ID_NewSystemOption,ID_MnuValRule,ID_NewGstValidationRule,ID_GSTValidationRule,ID_ConfigRoles,ID_GstImportVouchDBRole,ID_GstDBRole,ID_DBRole,ID_apuser,ID_Newotp";
                                    result = selectedValue.split(',');
                                    console.log(result);
                                }
                                else {
                                    result = ['0'];
                                }
                            }

                            $scope.comboTree0 = $('#justAnInputBox' + i).comboTree({
                                source: chkTree,
                                isMultiple: true,
                                cascadeSelect: true,
                                collapse: true,
                                selected: result
                            });
                        }
                        else if ($scope.optionKey[i].SettingKey.toLowerCase() == "kasp.mob.menu") {
                            if ($scope.model.frmMode == 1) {
                                $scope.model.DatasetCollection.setting.permission[i].CreatedOnUTC = new Date().toUTCString();
                                $scope.model.DatasetCollection.setting.permission[i].Settingtype = "permission";
                            }

                            if ($scope.model.DatasetCollection.setting.permission[i].SettingValue != undefined && $scope.model.DatasetCollection.setting.permission[i].SettingValue != "") {
                                var selectedValue = $scope.model.DatasetCollection.setting.permission[i].SettingValue;
                                result = selectedValue.split(',');
                                console.log(result);
                            }
                            else {
                                result = ['0'];
                            }

                            if ($scope.model.DatasetCollection.setting.permission[i].SettingOptions != null) {
                                //$scope.model.DatasetCollection.setting.permission[i].CreatedOnUTC = new Date().toUTCString();
                                kspMobilechkTree = JSON.parse($scope.model.DatasetCollection.setting.permission[i].SettingOptions.replace(/Key/g, 'id').replace(/Caption/g, 'title').replace(/Items/g, 'subs'));
                                console.log(kspMobilechkTree);
                            }
                        }
                        else {
                            kspMobilechkTree = [];
                            $scope.comboTree1 = $('#justAnInputBox' + i).comboTree({
                                source: kspMobilechkTree,
                                isMultiple: true,
                                cascadeSelect: true,
                                collapse: true,
                                selected: result
                            });
                        }
                    }
                }, 100);

                @Html.RenderLookup("OptionsModel", Model, Model.dsForm.Tables(0))
            };

            loadmodel($scope.model);

            $scope.cleanupmodel = function (datamodel) {
                //datamodel.DatasetCollection = null;
            };

            $scope.calculatemodel = function () {
                //debugger;
                //empty function
                if ($scope.comboTree0 != undefined) {
                    if ($scope.comboTree0.getSelectedIds() != null && $scope.comboTree0.getSelectedIds().length > 0) {
                        console.log($scope.comboTree0.getSelectedIds().toString());
                        $scope.model.DatasetCollection.setting.permission[0].SettingValue = $scope.comboTree0.getSelectedIds().toString();
                        console.log($scope.model.DatasetCollection.setting.permission[0].SettingValue);
                    }
                    else {
                        $scope.model.DatasetCollection.setting.permission[0].SettingValue = null;
                    }
                }
                if ($scope.comboTree1 != undefined) {
                    if ($scope.comboTree1.getSelectedIds() != null && $scope.comboTree1.getSelectedIds().length > 0) {
                        console.log($scope.comboTree1.getSelectedIds().toString());
                        $scope.model.DatasetCollection.setting.permission[1].SettingValue = $scope.comboTree1.getSelectedIds().toString();
                    }
                    else {
                        $scope.model.DatasetCollection.setting.permission[1].SettingValue = null;
                    }
                }
            };

            $scope.visdel = false;
            @Html.RenderFile("~/scripts/rsforms.js")
        });
    </script>
    @Html.RenderJsCss(false, "jqueryui")
}

